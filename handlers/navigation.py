from aiogram import F, Bot, Router
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.markdown import hlink, hbold

from motor.core import AgnosticDatabase as MDB

from keyboard.builder_kb import builder_keyboard


navigation_router = Router()

@navigation_router.callback_query(F.data == 'profile')
async def get_profile(call: CallbackQuery, db: MDB):
    user = await db.profile2.find_one(
        {
            "_id": call.from_user.id
        }
    )
    await call.message.edit_text(
        f"{hbold('ID')}....{call.from_user.id}\n"
        f"{hbold('Name')}....{call.from_user.full_name}\n\n"
        f"{hbold('Points')}....{user['points']}\n"
        f"{hbold('Diamond')}....{user['diamond']}üíé",
        reply_markup=builder_keyboard(
            text=['–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é ‚¨ÖÔ∏è'],
            callback=['back'],
            sizes=1
        )
    )

@navigation_router.callback_query(F.data == 'game')
async def get_profile(call: CallbackQuery):
    await call.message.edit_reply_markup(reply_markup=builder_keyboard(
        text=["Black_JacküÉè", "Diceüé≤", "BitCoinüí∏", "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é‚¨ÖÔ∏è"],
        callback=["blackjack", "dice", "bitcoin", "back"],
        sizes=2
    )
)
    await call.answer()


@navigation_router.callback_query(F.data == "dice")
async def get_cubs(call: CallbackQuery):
    await call.message.edit_text(text=f"{hbold('–ì—Ä–∞ –≤ –∫—É–±—ñ–∫ Dice')}\n"
                                 f"{hbold('–ü–µ—Ä—à–∏–π –∫—É–±—ñ–∫ –±–æ—Ç–∞')}\n"
                                 f"{hbold('–£ –∫–æ–≥–æ –±—ñ–ª—å—à–µ —Ç–æ–π –ø–µ—Ä–µ–º—ñ–≥')}\n"
                                 f"{hbold('–û–¥–Ω–∞ –ø–µ—Ä–µ–º–æ–≥–∞ +30 points')}",reply_markup=builder_keyboard(
        text=["Playüé≤", "–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è"],
        callback=["dicegame", "game"],
        sizes=2
        )
    )
    await call.answer()



@navigation_router.callback_query(F.data == 'blackjack')
async def get_cards_start(call:CallbackQuery):
    await call.message.edit_text(text=f"{hbold('–ì—Ä–∞ BlackJack')}\n"
                                      f"{hbold('–•—Ç–æ –Ω–∞–±—Ä–∞–≤ –±—ñ–ª—å—à–µ –ø–µ—Ä–µ–º—ñ–≥')}\n"
                                      f"{hbold('–ë—ñ–ª—å—à–µ 21 –ø—Ä–æ–≥—Ä–∞–≤')}\n"
                                      f"{hbold('J, Q, K —Ä–∞—Ö—É—é—Ç—å—Å—è —è–∫ 10')}\n"
                                      f"{hbold('A —Ä–∞—Ö—É—î—Ç—å—Å—è 11 —è–∫—â–æ –∑–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –æ—á–æ–∫ —É —Ä—É—Ü—ñ –Ω–µ –ø–µ—Ä–µ–≤–∏—â—É—î 21')}\n"
                                      f"{hbold('A —Ä–∞—Ö—É—î—Ç—å—Å—è —è–∫ 1, —è–∫—â–æ —Å—É–º–∞ –æ—á–æ–∫ –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –ê —è–∫ 11 –ø—Ä–∏–∑–≤–æ–¥–∏—Ç—å –¥–æ –ø–µ—Ä–µ–±–æ—Ä—É (—Å—É–º–∞ –±—ñ–ª—å—à–µ 21)')}\n"
                                      f"{hbold('–¶–∏—Ñ—Ä–∏ —Ä–∞—Ö—É—é—Ç—å—Å—è —è–∫ —î')}\n"
                                      f"{hbold('–û–¥–Ω–∞ –ø–µ—Ä–µ–º–æ–≥–∞ +50 points')}\n", reply_markup=builder_keyboard(
                                          ['PlayüÉè', '–ù–∞–∑–∞–¥‚¨ÖÔ∏è'],
                                          ['playjack', 'game'],
                                          sizes=2
                                      )
                                    )
    

@navigation_router.callback_query(F.data == 'bitcoin')
async def get_start_bitcoin(call: CallbackQuery):
    await call.message.edit_text(text=f"{hbold('–ì—Ä–∞ BitCoin')}\n"
                                 f"{hbold('–ü–æ—Ç—Ä—ñ–±–Ω–æ –≤–≥–∞–¥–∞—Ç–∏ –∫—É–¥–∏ –ø—ñ–¥–µ —Ü—ñ–Ω–∞ Bitcoin')}\n"
                                 f"{hbold('–û–¥–∏–Ω –≤–∏–≥—Ä–∞—à +100 points')}\n", reply_markup=builder_keyboard(
                                     ['Playüìä', '–ù–∞–∑–∞–¥‚¨ÖÔ∏è'],
                                     ['playbitcoin', 'game'],
                                     sizes=2
                                 )
                                )
    

@navigation_router.callback_query(F.data == 'shop')
async def get_shop(call: CallbackQuery):
    await call.message.edit_text(text=f"{hbold('–í—ñ—Ç–∞—é –≤ BotShop')}\n"
                                      f"{hbold('–¢—É—Ç —Ç–∏ –º–æ–∂–µ—à –≤–∏—Ç—Ä–∞—Ç–∏—Ç–∏ —Å–≤–æ—ó üíé')}\n"
                                      f"{hbold('–í–∏–±–µ—Ä–∏ —â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ üëá')}", reply_markup=builder_keyboard(
                                        ['Youtube/audio', 'Youtube/video', '–ù–∞–∑–∞–¥‚¨ÖÔ∏è'],
                                        ['audio', 'video', 'back'],
                                        sizes=1
                                    )
                                )
                                    
@navigation_router.callback_query(F.data == 'support')
async def get_support(call: CallbackQuery):
    await call.message.edit_text(text=f"{hbold('–ë–æ—Ç –Ω–∞–¥–∞—î –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –∑–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞—Ç–∏ —Ñ–∞–π–ª–∏ –∑ YouTube –∞–±–æ Instagram, –∞–ª–µ –¥–ª—è —Ü—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –≥—Ä–∞—Ç–∏ –≤ —ñ–≥—Ä–∏')}\n"
                                      f"{hbold('–ó–∞ –≤–∏–≥—Ä–∞—à —É —ñ–≥—Ä–∞—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –∑–∞—Ä–æ–±–ª—è—é—Ç—å –ø–æ—ñ–Ω—Ç–∏, —è–∫—ñ –º–æ–∂–Ω–∞ –Ω–∞–∫–æ–ø–∏—á—É–≤–∞—Ç–∏')}\n"
                                      f"{hbold('–ó—ñ–±—Ä–∞–Ω—ñ –ø–æ—ñ–Ω—Ç–∏ –º–æ–∂–Ω–∞ –æ–±–º—ñ–Ω—è—Ç–∏ –Ω–∞ –¥—ñ–∞–º–∞–Ω—Ç–∏ ‚Äî –≤–Ω—É—Ç—Ä—ñ—à–Ω—é –≤–∞–ª—é—Ç—É –±–æ—Ç–∞')}\n"
                                      f"{hbold('–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–æ–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –¥—ñ–∞–º–∞–Ω—Ç–∏ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ—Ç—Ä—ñ–±–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É –∑ YouTube –∞–±–æ Instagram')}\n"
                                      f"{hbold('–ß–∏–º –±—ñ–ª—å—à–µ –≤–∏–≥—Ä–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á, —Ç–∏–º –±—ñ–ª—å—à–µ –∫–æ–Ω—Ç–µ–Ω—Ç—É –≤—ñ–Ω –∑–º–æ–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏.')}\n"
                                      f"{hbold('–í–∏–Ω–∏–∫–ª–∏ –ø–∏—Ç–∞–Ω–Ω—è –∞–±–æ –∑–∞–º—ñ—Ç–∏–≤ –±–∞–≥ –ø–∏—à–∏')}üëá\n"
                                      f"{hlink(title='SupportBot', url='https://t.me/su_rwx')}\n", reply_markup=InlineKeyboardMarkup(
                                          inline_keyboard=[
                                              [
                                                  InlineKeyboardButton(text='–ó—Ä–æ–∑—É–º—ñ–ª–æ ‚úîÔ∏è', callback_data='delite')
                                              ]
                                          ]
                                      )
                                    )
    
# –∫–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è

@navigation_router.callback_query(F.data == 'delite')
async def get_delite(call: CallbackQuery, bot: Bot):
    await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
    await call.answer()
